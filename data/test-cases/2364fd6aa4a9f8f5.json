{"uid":"2364fd6aa4a9f8f5","name":"test_invalid_signup[data3-False]","fullName":"tests.test_invalid#test_invalid_signup","historyId":"690fd3b792ef3ae24a8501e6608c2094","time":{"start":1755194088179,"stop":1755194089219,"duration":1040},"status":"failed","statusMessage":"AssertionError: assert True == False\n +  where True = <bound method Basepage.sign_up of <pages.homepage.Homepage object at 0x7f1824845190>>({'username': 'OMMdzSwI*N'})\n +    where <bound method Basepage.sign_up of <pages.homepage.Homepage object at 0x7f1824845190>> = <pages.homepage.Homepage object at 0x7f1824845190>.sign_up","statusTrace":"page = <Page url='https://demoblaze.com/'>, data = {'username': 'OMMdzSwI*N'}\nexpect_result = False\n\n    @allure.epic(\"Demoblaze\")\n    @allure.feature(\"Тестирование невалидных значений\")\n    @allure.story(\"Проверка обработки невалидных значений функции Sign Up\")\n    @pytest.mark.parametrize(\"data, expect_result\", [\n        ({'username': 'admin'}, False),\n        ({'username': ''}, False),\n        ({'username': fake.password(length=100)}, False),\n        ({'username': fake.password(length=10, special_chars=True, digits=False,\n                                    upper_case=True, lower_case=True)}, False),\n    ])\n    def test_invalid_signup(page, data, expect_result):\n        home_page = Homepage(page)\n    \n        with allure.step(\"Пытаемся регистрировать аккаунт\"):\n>           assert home_page.sign_up(data) == expect_result\nE           AssertionError: assert True == False\nE            +  where True = <bound method Basepage.sign_up of <pages.homepage.Homepage object at 0x7f1824845190>>({'username': 'OMMdzSwI*N'})\nE            +    where <bound method Basepage.sign_up of <pages.homepage.Homepage object at 0x7f1824845190>> = <pages.homepage.Homepage object at 0x7f1824845190>.sign_up\n\ntests/test_invalid.py:26: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1755194045166,"stop":1755194045167,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"page","time":{"start":1755194087485,"stop":1755194088178,"duration":693},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert True == False\n +  where True = <bound method Basepage.sign_up of <pages.homepage.Homepage object at 0x7f1824845190>>({'username': 'OMMdzSwI*N'})\n +    where <bound method Basepage.sign_up of <pages.homepage.Homepage object at 0x7f1824845190>> = <pages.homepage.Homepage object at 0x7f1824845190>.sign_up","statusTrace":"page = <Page url='https://demoblaze.com/'>, data = {'username': 'OMMdzSwI*N'}\nexpect_result = False\n\n    @allure.epic(\"Demoblaze\")\n    @allure.feature(\"Тестирование невалидных значений\")\n    @allure.story(\"Проверка обработки невалидных значений функции Sign Up\")\n    @pytest.mark.parametrize(\"data, expect_result\", [\n        ({'username': 'admin'}, False),\n        ({'username': ''}, False),\n        ({'username': fake.password(length=100)}, False),\n        ({'username': fake.password(length=10, special_chars=True, digits=False,\n                                    upper_case=True, lower_case=True)}, False),\n    ])\n    def test_invalid_signup(page, data, expect_result):\n        home_page = Homepage(page)\n    \n        with allure.step(\"Пытаемся регистрировать аккаунт\"):\n>           assert home_page.sign_up(data) == expect_result\nE           AssertionError: assert True == False\nE            +  where True = <bound method Basepage.sign_up of <pages.homepage.Homepage object at 0x7f1824845190>>({'username': 'OMMdzSwI*N'})\nE            +    where <bound method Basepage.sign_up of <pages.homepage.Homepage object at 0x7f1824845190>> = <pages.homepage.Homepage object at 0x7f1824845190>.sign_up\n\ntests/test_invalid.py:26: AssertionError","steps":[{"name":"Пытаемся регистрировать аккаунт","time":{"start":1755194088179,"stop":1755194089218,"duration":1039},"status":"failed","statusMessage":"AssertionError: assert True == False\n +  where True = <bound method Basepage.sign_up of <pages.homepage.Homepage object at 0x7f1824845190>>({'username': 'OMMdzSwI*N'})\n +    where <bound method Basepage.sign_up of <pages.homepage.Homepage object at 0x7f1824845190>> = <pages.homepage.Homepage object at 0x7f1824845190>.sign_up\n","statusTrace":"  File \"/home/runner/work/PlaywrightDemoblaze/PlaywrightDemoblaze/tests/test_invalid.py\", line 26, in test_invalid_signup\n    assert home_page.sign_up(data) == expect_result\n","steps":[{"name":"Регистрация пользователя","time":{"start":1755194088179,"stop":1755194089218,"duration":1039},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"data","value":"{'username': 'OMMdzSwI*N'}"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":1,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"page::0","time":{"start":1755194089223,"stop":1755194089264,"duration":41},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"feature","value":"Тестирование невалидных значений"},{"name":"epic","value":"Demoblaze"},{"name":"story","value":"Проверка обработки невалидных значений функции Sign Up"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_invalid"},{"name":"host","value":"pkrvmsl9tci6h6u"},{"name":"thread","value":"7255-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_invalid"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"data","value":"{'username': 'OMMdzSwI*N'}"},{"name":"expect_result","value":"False"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"2364fd6aa4a9f8f5.json","parameterValues":["{'username': 'OMMdzSwI*N'}","False"]}